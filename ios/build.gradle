buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		jcenter()
	}
	dependencies {
		classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.3'
	}
}

apply plugin: "java"
apply plugin: "robovm"

dependencies {
	compile project(':core')
	compile "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
	compile "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
	compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
	compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-ios"
}

sourceSets.main {
	java.srcDirs = ["src"]
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

ext {
//	signIdentity = "iPhone Developer: Michael Dolas (3QHLV6Y589)"
//	provisioningProfile = "65c884dc-5df2-4086-963e-b66e81bd4957"

	signIdentity = "C122253E219FAFDD2E7EA09DEBFF77B2F7332041"
	provisioningProfile = "1bede9b1-8b82-4744-9fe7-23623e5b8034"
}

task cleanRobovmBuild {
	new File("$project.name/build/robovm").deleteDir()
}

task installIDevice {
	dependsOn createIPA

	doLast {
		exec {
			executable "ideviceinstaller"
			args("-i", "${project.buildDir}/robovm/${executableName}.ipa")
		}
	}
}

launchIPhoneSimulator.dependsOn(cleanRobovmBuild, build)
launchIPadSimulator.dependsOn(cleanRobovmBuild, build)
launchIOSDevice.dependsOn(cleanRobovmBuild, build)
createIPA.dependsOn(cleanRobovmBuild, build)

robovm {
	archs = "arm64"
	iosSignIdentity = signIdentity
	iosProvisioningProfile = provisioningProfile
	iosSkipSigning = false
}