apply plugin: "groovy"

dependencies {
	compile project(":godwit")
	compile "org.codehaus.groovy:groovy:2.4.12"
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

targetCompatibility = 1.7
sourceCompatibility = 1.7
[compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = "UTF-8"

sourceSets.main {
	java.srcDirs = []
	groovy.srcDirs = ["src"]
	resources.srcDirs = ["resources/dist"]
}

project.ext.mainClassName = "pl.shockah.godwit.test.TestStarter"

def testNames = [
		"AttachedViewport", "Shapes", "Sprite", "Animation",
		["ui", "LinearView"]
]

testNames.each { testEntry ->
	def testName
	def className

	if (testEntry instanceof String) {
		def entryString = testEntry as String
		testName = entryString
		className = entryString
	} else if (testEntry instanceof List) {
		def entryList = testEntry as List
		testName = entryList[1]
		className = "${entryList[0]}.${entryList[1]}"
	} else {
		throw new IllegalArgumentException()
	}

	tasks.create("test${testName}", JavaExec) {
		dependsOn 'classes'

		main = project.mainClassName
		args className
		classpath = sourceSets.main.runtimeClasspath
		standardInput = System.in
		ignoreExitValue = true
		if (System.getProperty("os.name") == "Mac OS X")
			jvmArgs "-XstartOnFirstThread"
		//workingDir = project.assetsDir

		if (System.getProperty('DEBUG', 'false') == 'true') {
			jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
			debug true
		}
	}
}